"use strict";
const utils_1 = require("../utils");
const decorator_1 = require("../decorator");
class CapitalizeVisitor extends decorator_1.VariableDecorator {
    visitVariableDeclaration(node) {
        this.visit(node.initializer);
    }
    get testDecorator() {
        return (node) => utils_1.decorates(node, "capitalize");
    }
    visitStringLiteralExpression(node) {
        const newNode = utils_1.cloneNode(node);
        newNode.value = node.value.toUpperCase();
        this.replaceCurrentNode(newNode);
        this.stdout.write(node.value + " -> " + newNode.value + "\n");
    }
    visitTemplateLiteralExpression(node) {
        if (node.parts.length == 1 && node.expressions.length == 0) {
            const newNode = utils_1.cloneNode(node);
            newNode.parts[0] = node.parts[0].toUpperCase();
            this.replaceCurrentNode(newNode);
            this.stdout.write(node.parts[0] + " -> " + newNode.parts[0] + "\n");
        }
    }
}
module.exports = decorator_1.registerDecorator(new CapitalizeVisitor());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FwaXRhbGl6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leGFtcGxlcy9jYXBpdGFsaXplLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxvQ0FBZ0Q7QUFDaEQsNENBQW9FO0FBR3BFLE1BQU0saUJBQWtCLFNBQVEsNkJBQWlCO0lBQy9DLHdCQUF3QixDQUFDLElBQXlCO1FBQ2hELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxJQUFJLGFBQWE7UUFDZixPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxpQkFBUyxDQUFDLElBQUksRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQsNEJBQTRCLENBQUMsSUFBNkI7UUFDeEQsTUFBTSxPQUFPLEdBQUcsaUJBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDekMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxHQUFHLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVELDhCQUE4QixDQUFDLElBQStCO1FBQzVELElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBQztZQUN6RCxNQUFNLE9BQU8sR0FBRyxpQkFBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUMvQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztTQUNyRTtJQUNILENBQUM7Q0FDRjtBQUVELGlCQUFTLDZCQUFpQixDQUFDLElBQUksaUJBQWlCLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xvbmVOb2RlLCBkZWNvcmF0ZXMgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmltcG9ydCB7IFZhcmlhYmxlRGVjb3JhdG9yLCByZWdpc3RlckRlY29yYXRvciB9IGZyb20gXCIuLi9kZWNvcmF0b3JcIjtcbmltcG9ydCB7IERlY29yYXRvck5vZGUsIFN0cmluZ0xpdGVyYWxFeHByZXNzaW9uLCBUZW1wbGF0ZUxpdGVyYWxFeHByZXNzaW9uLCBWYXJpYWJsZURlY2xhcmF0aW9uIH0gZnJvbSBcIi4uLy4uL2FzXCI7XG5cbmNsYXNzIENhcGl0YWxpemVWaXNpdG9yIGV4dGVuZHMgVmFyaWFibGVEZWNvcmF0b3Ige1xuICB2aXNpdFZhcmlhYmxlRGVjbGFyYXRpb24obm9kZTogVmFyaWFibGVEZWNsYXJhdGlvbik6IHZvaWQge1xuICAgIHRoaXMudmlzaXQobm9kZS5pbml0aWFsaXplcik7XG4gIH1cblxuICBnZXQgdGVzdERlY29yYXRvcigpOiAobm9kZTogRGVjb3JhdG9yTm9kZSkgPT4gYm9vbGVhbiB7XG4gICAgcmV0dXJuIChub2RlKSA9PiBkZWNvcmF0ZXMobm9kZSwgXCJjYXBpdGFsaXplXCIpO1xuICB9XG5cbiAgdmlzaXRTdHJpbmdMaXRlcmFsRXhwcmVzc2lvbihub2RlOiBTdHJpbmdMaXRlcmFsRXhwcmVzc2lvbik6IHZvaWQge1xuICAgIGNvbnN0IG5ld05vZGUgPSBjbG9uZU5vZGUobm9kZSk7XG4gICAgbmV3Tm9kZS52YWx1ZSA9IG5vZGUudmFsdWUudG9VcHBlckNhc2UoKTtcbiAgICB0aGlzLnJlcGxhY2VDdXJyZW50Tm9kZShuZXdOb2RlKTtcbiAgICB0aGlzLnN0ZG91dC53cml0ZShub2RlLnZhbHVlICsgXCIgLT4gXCIgKyBuZXdOb2RlLnZhbHVlICsgXCJcXG5cIik7XG4gIH1cbiAgXG4gIHZpc2l0VGVtcGxhdGVMaXRlcmFsRXhwcmVzc2lvbihub2RlOiBUZW1wbGF0ZUxpdGVyYWxFeHByZXNzaW9uKTogdm9pZCB7XG4gICAgaWYgKG5vZGUucGFydHMubGVuZ3RoID09IDEgJiYgbm9kZS5leHByZXNzaW9ucy5sZW5ndGggPT0gMCl7XG4gICAgICBjb25zdCBuZXdOb2RlID0gY2xvbmVOb2RlKG5vZGUpO1xuICAgICAgbmV3Tm9kZS5wYXJ0c1swXSA9IG5vZGUucGFydHNbMF0udG9VcHBlckNhc2UoKTtcbiAgICAgIHRoaXMucmVwbGFjZUN1cnJlbnROb2RlKG5ld05vZGUpO1xuICAgICAgdGhpcy5zdGRvdXQud3JpdGUobm9kZS5wYXJ0c1swXSArIFwiIC0+IFwiICsgbmV3Tm9kZS5wYXJ0c1swXSArIFwiXFxuXCIpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgPSByZWdpc3RlckRlY29yYXRvcihuZXcgQ2FwaXRhbGl6ZVZpc2l0b3IoKSk7XG4iXX0=